sample3.yml

---
- hosts: centos_host2
  become: yes

  tasks:
  - name: Ensure apache installed
    yum: name=httpd state=present

  - name: checking apache is running or not
    service: name=httpd state=stopped

	
==========================================================
Conditional statements
==========================================================
when_example.yml

---
- hosts: all
  become: yes

  tasks:
  - name: "shutting down debian flavoured machines"
    command: /sbin/shutdown -H now
    when: ansible_os_family == "Debian"

============================
---
- hosts: all
  become: yes

  tasks:
  - name: "shutting down debian flavoured machines"
    command: /sbin/shutdown -H now
    when: (ansible_distribution == "CentOS" and ansible_distribution_major_version == "7") or
          (ansible_distribution == "Debian" and ansible_distribution_major_version == "14")
		  
================================
[vagrant@controlmachine playbooks]$ cat loop_example2.yml
---
- hosts: all
  become: yes

  tasks:
  - name: "sample loop example"
    command: echo {{ item }}
    with_items: [0,2,4,6,8,10]
    when: item>5

==================================
[vagrant@controlmachine playbooks]$ cat loop_example.yml
---
- hosts: all
  become: yes

  tasks:
  - name: "add several users "
    user:
      name: "{{ item }}"
      state: present
      groups: group1
    with_items:
      - testuser1
      - testuser2

=================================

[vagrant@controlmachine playbooks]$ cat addinguser.yml
---
- hosts: all
  become: yes

  tasks:
  - name: "adding server users"
    user:
      name: "{{ item.name }}"
      state: present
      groups: "{{ item.groups }}"
    with_items:
      - { name: 'user1', groups: 'group1' }
      - { name: 'user2', groups: 'newgroup' }

=================================

[vagrant@controlmachine playbooks]$ cat register.yml
---
- hosts: all
  become: yes

  tasks:
  - name: "this is register example"
    shell: "echo {{ item }}"
    with_items:
      - "one"
      - "two"
    register: echo

========================================



